services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB:
      POSTGRES_USER:
      POSTGRES_PASSWORD:
    volumes:
      - dbdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL","pg_isready -U metrics -d metrics"]
      interval: 5s
      timeout: 3s
      retries: 30

  web:
    build: .
    command: ["/app/entrypoint.sh","web"]
    ports: ["8000:8000"]
    environment:
      DJANGO_SECRET_KEY: dev
      DB_NAME:
      DB_USER:
      DB_PASSWORD:
      DB_HOST: db
      DB_PORT: "5432"
      TZ: Europe/Warsaw
    depends_on:
      db: { condition: service_healthy }

  bot:
    build: .
    command: ["/app/entrypoint.sh","bot"]
    environment:
      DJANGO_SECRET_KEY: dev
      DB_NAME:
      DB_USER:
      DB_PASSWORD:
      DB_HOST: db
      DB_PORT: "5432"
      DISCORD_TOKEN:
      GUILD_ID:
      TZ: Europe/Warsaw
    depends_on:
      db: { condition: service_healthy }

volumes:
  dbdata:
